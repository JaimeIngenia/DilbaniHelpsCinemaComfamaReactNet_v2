// <auto-generated />
using System;
using CinemaComfamaVs5.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace CinemaComfamaVs5.Migrations
{
    [DbContext(typeof(DBCINEMA3Context))]
    partial class DBCINEMA3ContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("CinemaComfamaVs5.Models.Formato", b =>
                {
                    b.Property<int>("IdFormato")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdFormato"), 1L, 1);

                    b.Property<string>("NombreFormato")
                        .HasMaxLength(250)
                        .IsUnicode(false)
                        .HasColumnType("varchar(250)");

                    b.HasKey("IdFormato")
                        .HasName("PK__FORMATO__A7043164AA3DE512");

                    b.ToTable("FORMATO", (string)null);
                });

            modelBuilder.Entity("CinemaComfamaVs5.Models.Genero", b =>
                {
                    b.Property<int>("IdGenero")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdGenero"), 1L, 1);

                    b.Property<string>("NombreGenero")
                        .HasMaxLength(250)
                        .IsUnicode(false)
                        .HasColumnType("varchar(250)");

                    b.HasKey("IdGenero")
                        .HasName("PK__GENERO__0F8349889A4C9B30");

                    b.ToTable("GENERO", (string)null);
                });

            modelBuilder.Entity("CinemaComfamaVs5.Models.Hora", b =>
                {
                    b.Property<int>("IdHora")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdHora"), 1L, 1);

                    b.Property<TimeSpan?>("Hora1")
                        .HasColumnType("time")
                        .HasColumnName("Hora");

                    b.HasKey("IdHora")
                        .HasName("PK__HORAS__5FEB39EB359E0DA9");

                    b.ToTable("HORAS", (string)null);
                });

            modelBuilder.Entity("CinemaComfamaVs5.Models.Horario", b =>
                {
                    b.Property<int>("IdHorario")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdHorario"), 1L, 1);

                    b.Property<int?>("IdHora")
                        .HasColumnType("int");

                    b.Property<int?>("IdPelicula")
                        .HasColumnType("int");

                    b.Property<int?>("IdSala")
                        .HasColumnType("int");

                    b.HasKey("IdHorario")
                        .HasName("PK__HORARIOS__1539229B8F5E278C");

                    b.HasIndex("IdHora");

                    b.HasIndex("IdPelicula");

                    b.HasIndex("IdSala");

                    b.ToTable("HORARIOS", (string)null);
                });

            modelBuilder.Entity("CinemaComfamaVs5.Models.Pelicula", b =>
                {
                    b.Property<int>("IdPelicula")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdPelicula"), 1L, 1);

                    b.Property<int?>("Duracion")
                        .HasColumnType("int");

                    b.Property<int?>("IdFormato")
                        .HasColumnType("int");

                    b.Property<int?>("IdGenero")
                        .HasColumnType("int");

                    b.Property<string>("ImagenPromocional")
                        .HasMaxLength(250)
                        .IsUnicode(false)
                        .HasColumnType("varchar(250)");

                    b.Property<string>("Sinopsis")
                        .HasColumnType("text");

                    b.Property<string>("Titulo")
                        .HasMaxLength(250)
                        .IsUnicode(false)
                        .HasColumnType("varchar(250)");

                    b.Property<double?>("Valor")
                        .HasColumnType("float");

                    b.HasKey("IdPelicula")
                        .HasName("PK__PELICULA__60537FD0BE8AB58A");

                    b.HasIndex("IdFormato");

                    b.HasIndex("IdGenero");

                    b.ToTable("PELICULA", (string)null);
                });

            modelBuilder.Entity("CinemaComfamaVs5.Models.Reserva", b =>
                {
                    b.Property<int>("IdReserva")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdReserva"), 1L, 1);

                    b.Property<int?>("IdHorario")
                        .HasColumnType("int");

                    b.Property<int?>("IdUsuario")
                        .HasColumnType("int");

                    b.HasKey("IdReserva")
                        .HasName("PK__RESERVAS__0E49C69D91FF0D96");

                    b.HasIndex("IdHorario");

                    b.HasIndex("IdUsuario");

                    b.ToTable("RESERVAS", (string)null);
                });

            modelBuilder.Entity("CinemaComfamaVs5.Models.ReservaReal", b =>
                {
                    b.Property<int>("IdReservaReal")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdReservaReal"), 1L, 1);

                    b.Property<int?>("IdUsuario")
                        .HasColumnType("int");

                    b.Property<int?>("IdUsuarioNavegacionIdUsuario")
                        .HasColumnType("int");

                    b.HasKey("IdReservaReal");

                    b.HasIndex("IdUsuarioNavegacionIdUsuario");

                    b.ToTable("ReservasReales");
                });

            modelBuilder.Entity("CinemaComfamaVs5.Models.Sala", b =>
                {
                    b.Property<int>("IdSala")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdSala"), 1L, 1);

                    b.Property<string>("Estado")
                        .HasMaxLength(250)
                        .IsUnicode(false)
                        .HasColumnType("varchar(250)");

                    b.Property<string>("NombreSala")
                        .HasMaxLength(250)
                        .IsUnicode(false)
                        .HasColumnType("varchar(250)");

                    b.HasKey("IdSala")
                        .HasName("PK__SALA__A04F9B3B4DBCA541");

                    b.ToTable("SALA", (string)null);
                });

            modelBuilder.Entity("CinemaComfamaVs5.Models.Sillareserva", b =>
                {
                    b.Property<int>("IdSillaReserva")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdSillaReserva"), 1L, 1);

                    b.Property<int?>("IdReserva")
                        .HasColumnType("int");

                    b.Property<int?>("NumeroSilla")
                        .HasColumnType("int");

                    b.HasKey("IdSillaReserva")
                        .HasName("PK__SILLARES__169371E86B378E11");

                    b.HasIndex("IdReserva");

                    b.ToTable("SILLARESERVA", (string)null);
                });

            modelBuilder.Entity("CinemaComfamaVs5.Models.Tipodocumento", b =>
                {
                    b.Property<int>("IdTipoDocumento")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdTipoDocumento"), 1L, 1);

                    b.Property<string>("TipoDocumento1")
                        .HasMaxLength(250)
                        .IsUnicode(false)
                        .HasColumnType("varchar(250)")
                        .HasColumnName("TipoDocumento");

                    b.HasKey("IdTipoDocumento")
                        .HasName("PK__TIPODOCU__3AB3332F60150BF4");

                    b.ToTable("TIPODOCUMENTO", (string)null);
                });

            modelBuilder.Entity("CinemaComfamaVs5.Models.TipoRol", b =>
                {
                    b.Property<int>("IdTipoRol")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdTipoRol"), 1L, 1);

                    b.Property<string>("NombreRol")
                        .IsRequired()
                        .HasMaxLength(250)
                        .IsUnicode(false)
                        .HasColumnType("varchar(250)");

                    b.HasKey("IdTipoRol")
                        .HasName("PK_TipoRol");

                    b.ToTable("TIPOROL", (string)null);
                });

            modelBuilder.Entity("CinemaComfamaVs5.Models.Usuario", b =>
                {
                    b.Property<int>("IdUsuario")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdUsuario"), 1L, 1);

                    b.Property<string>("Apellidos")
                        .HasMaxLength(250)
                        .IsUnicode(false)
                        .HasColumnType("varchar(250)");

                    b.Property<string>("Contrasena")
                        .HasMaxLength(250)
                        .IsUnicode(false)
                        .HasColumnType("varchar(250)");

                    b.Property<string>("Correo")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<int?>("IdTipoDocumento")
                        .HasColumnType("int");

                    b.Property<int?>("IdTipoRol")
                        .HasColumnType("int");

                    b.Property<string>("Nombres")
                        .HasMaxLength(250)
                        .IsUnicode(false)
                        .HasColumnType("varchar(250)");

                    b.Property<string>("NumeroDocumento")
                        .HasMaxLength(250)
                        .IsUnicode(false)
                        .HasColumnType("varchar(250)");

                    b.HasKey("IdUsuario")
                        .HasName("PK__USUARIOS__5B65BF97E27CBFF4");

                    b.HasIndex("IdTipoDocumento");

                    b.HasIndex("IdTipoRol");

                    b.ToTable("USUARIOS", (string)null);
                });

            modelBuilder.Entity("CinemaComfamaVs5.Models.Horario", b =>
                {
                    b.HasOne("CinemaComfamaVs5.Models.Hora", "IdHoraNavigation")
                        .WithMany("Horarios")
                        .HasForeignKey("IdHora")
                        .HasConstraintName("FK_HoraHorario");

                    b.HasOne("CinemaComfamaVs5.Models.Pelicula", "IdPeliculaNavigation")
                        .WithMany("Horarios")
                        .HasForeignKey("IdPelicula")
                        .HasConstraintName("FK_PeliculaHorario");

                    b.HasOne("CinemaComfamaVs5.Models.Sala", "IdSalaNavigation")
                        .WithMany("Horarios")
                        .HasForeignKey("IdSala")
                        .HasConstraintName("FK_SalaHorario");

                    b.Navigation("IdHoraNavigation");

                    b.Navigation("IdPeliculaNavigation");

                    b.Navigation("IdSalaNavigation");
                });

            modelBuilder.Entity("CinemaComfamaVs5.Models.Pelicula", b =>
                {
                    b.HasOne("CinemaComfamaVs5.Models.Genero", "oFormato")
                        .WithMany("Peliculas")
                        .HasForeignKey("IdFormato")
                        .HasConstraintName("FK_Formato");

                    b.HasOne("CinemaComfamaVs5.Models.Formato", "oGenero")
                        .WithMany("Peliculas")
                        .HasForeignKey("IdGenero")
                        .HasConstraintName("FK_Genero");

                    b.Navigation("oFormato");

                    b.Navigation("oGenero");
                });

            modelBuilder.Entity("CinemaComfamaVs5.Models.Reserva", b =>
                {
                    b.HasOne("CinemaComfamaVs5.Models.Horario", "IdHorarioNavigation")
                        .WithMany("Reservas")
                        .HasForeignKey("IdHorario")
                        .HasConstraintName("FK_HorarioReserva");

                    b.HasOne("CinemaComfamaVs5.Models.Usuario", "IdUsuarioNavigation")
                        .WithMany("Reservas")
                        .HasForeignKey("IdUsuario")
                        .HasConstraintName("FK_UsuarioReserva");

                    b.Navigation("IdHorarioNavigation");

                    b.Navigation("IdUsuarioNavigation");
                });

            modelBuilder.Entity("CinemaComfamaVs5.Models.ReservaReal", b =>
                {
                    b.HasOne("CinemaComfamaVs5.Models.Usuario", "IdUsuarioNavegacion")
                        .WithMany("ReservasReales")
                        .HasForeignKey("IdUsuarioNavegacionIdUsuario");

                    b.Navigation("IdUsuarioNavegacion");
                });

            modelBuilder.Entity("CinemaComfamaVs5.Models.Sillareserva", b =>
                {
                    b.HasOne("CinemaComfamaVs5.Models.Reserva", "IdReservaNavigation")
                        .WithMany("Sillareservas")
                        .HasForeignKey("IdReserva")
                        .HasConstraintName("FK_ReservaSilla");

                    b.Navigation("IdReservaNavigation");
                });

            modelBuilder.Entity("CinemaComfamaVs5.Models.Usuario", b =>
                {
                    b.HasOne("CinemaComfamaVs5.Models.Tipodocumento", "IdTipoDocumentoNavigation")
                        .WithMany("Usuarios")
                        .HasForeignKey("IdTipoDocumento")
                        .HasConstraintName("FK_TipoDocumento");

                    b.HasOne("CinemaComfamaVs5.Models.TipoRol", "IdTipoRolNavigation")
                        .WithMany("Usuarios")
                        .HasForeignKey("IdTipoRol")
                        .HasConstraintName("FK_TipoRolUsuario");

                    b.Navigation("IdTipoDocumentoNavigation");

                    b.Navigation("IdTipoRolNavigation");
                });

            modelBuilder.Entity("CinemaComfamaVs5.Models.Formato", b =>
                {
                    b.Navigation("Peliculas");
                });

            modelBuilder.Entity("CinemaComfamaVs5.Models.Genero", b =>
                {
                    b.Navigation("Peliculas");
                });

            modelBuilder.Entity("CinemaComfamaVs5.Models.Hora", b =>
                {
                    b.Navigation("Horarios");
                });

            modelBuilder.Entity("CinemaComfamaVs5.Models.Horario", b =>
                {
                    b.Navigation("Reservas");
                });

            modelBuilder.Entity("CinemaComfamaVs5.Models.Pelicula", b =>
                {
                    b.Navigation("Horarios");
                });

            modelBuilder.Entity("CinemaComfamaVs5.Models.Reserva", b =>
                {
                    b.Navigation("Sillareservas");
                });

            modelBuilder.Entity("CinemaComfamaVs5.Models.Sala", b =>
                {
                    b.Navigation("Horarios");
                });

            modelBuilder.Entity("CinemaComfamaVs5.Models.Tipodocumento", b =>
                {
                    b.Navigation("Usuarios");
                });

            modelBuilder.Entity("CinemaComfamaVs5.Models.TipoRol", b =>
                {
                    b.Navigation("Usuarios");
                });

            modelBuilder.Entity("CinemaComfamaVs5.Models.Usuario", b =>
                {
                    b.Navigation("Reservas");

                    b.Navigation("ReservasReales");
                });
#pragma warning restore 612, 618
        }
    }
}
